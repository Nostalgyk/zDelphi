unit uPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TfrmPrincipal = class(TForm)
    pnlPrincipal: TPanel;
    lblValorCarro: TLabel;
    edtValor: TEdit;
    cboTipoVeiculo: TComboBox;
    lblTipoVeiculo: TLabel;
    btnCalcular: TButton;
    btnLimpar: TButton;
    lbxResultado: TListBox;
    procedure btnCalcularClick(Sender: TObject);
  private

  const
    AUTOMOVEIS = 0.04;
    CAMINHONETES = 0.03;
    TRANSPORTE_PUBLICO = 0.02;
    VEICULOS_LOCADORES = 0.01;
    ONIBUS_CAMINHAO = 0.01;

    procedure ValidarCampos;
    function CalcularImposto(pValorVeiculo: Real; pTipoVeiculo: Integer): Real;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmPrincipal: TfrmPrincipal;

implementation

{$R *.dfm}

{ TfrmPrincipal }

procedure TfrmPrincipal.btnCalcularClick(Sender: TObject);
begin
  ValidarCampos;
  {ShowMessage('O valor do imposto é: ' +
   FloatToStr(CalcularImposto(StrToFloat(edtValor.Text), cboTipoVeiculo.ItemIndex)));
  }
  lValorVeiculo := StrToFloat(edtValorVeiculo.Text);
end;

function TfrmPrincipal.CalcularImposto(pValorVeiculo: Real;
  pTipoVeiculo: Integer): Real;
var
  lValorImposto: Real;
begin
  case pTipoVeiculo of
  0: lValorImposto := (pValorVeiculo * AUTOMOVEIS);
  1: lValorImposto := (pValorVeiculo * CAMINHONETES);
  2: lValorImposto := (pValorVeiculo * TRANSPORTE_PUBLICO);
  3: lValorImposto := (pValorVeiculo * VEICULOS_LOCADORES);
  4: lValorImposto := (pValorVeiculo * ONIBUS_CAMINHAO);
  end;

  Result := lValorImposto;
end;

procedure TfrmPrincipal.validarCampos;
begin
  if edtValor.Text = '' then
  begin
    ShowMessage('O valor do veículo deve ser preenchido!');
    edtValor.SetFocus;
    Abort;
  end;

  if cboTipoVeiculo.ItemIndex = -1 then
  begin
    ShowMessage('O tipo do veículo deve ser informado!');
    cboTipoVeiculo.SetFocus;
    Abort;
  end;
end;

end.
